
import io
import pickle
import asyncio
import datetime
import socket
import time
from threading import Thread

HOST = 'localhost'
PORT = 8082
THIS_NAME = 'client1'


def run():
    global inspectionCount, sock, partsNum, lastINS, modelChange

    with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as sock:
        sock.settimeout(5)
        sock.connect((HOST, PORT))
        sock.settimeout(None)
        print('connection established')

        while True:
            data = sock.recv(1024)
            if not data:
                break
            msg = data.decode('ascii')
            print(datetime.datetime.now(), msg)
        sock.close()
        print('connection disconnected')


async def interrupt():
    await asyncio.sleep(5)
    raise KeyboardInterrupt


def send_msg_loop():
    cnt = 0
    while cnt < 1000:
        msg = '[-0.41838765,0.09795399,0.086967684,0.039197877,-0.618447,0.3348426,1.2637075,-0.43977067,0.101006895,-0.112192504,-0.014877489,-0.2324087,-0.169545,-0.2578424,-0.4948789,0.2093094,0.21021512,-0.41457975,-0.27419803,-0.32281724,0.09573166,-0.62302685,0.5229801,0.3175602,0.68373764,0.32511196,0.075966045,0.5312925,0.25910282,0.45272923,0.48116025,0.21468545,-0.3095299,-0.08337325,-0.39789397,0.5612681,0.123615935,0.51174843,0.4050969,0.43212926,0.22979607,-0.15251204,-0.20754549,-0.5625835,0.06648416,0.06860587,-0.64550185,0.1986046,-0.18700415,-0.025871761,-0.5544154,0.780786,0.41623163,-0.264688,-0.58945066,-0.0949284,-0.21986797,-0.59492594,-0.49252567,-1.0521275,-0.60809726,-0.19483587,-0.06768659,0.24638645,-0.3750428,-0.011008907,0.40497318,-0.027292453,-0.45295984,-0.65586096,0.18986942,-0.27141777,-0.47127676,0.28027827,0.108115286,-0.9365752,0.3049682,0.25458908,0.16851349,0.500193,0.20094636,-0.3759228,-0.15133224,-0.40581822,0.29983434,-0.027704583,0.6938925,0.51994866,-0.0940645,0.060003135,0.17620078,-0.28547987,0.21519704,-0.048966788,-0.4295356,0.10314559,0.6423475,-0.17721431,0.13377747,0.31411523,-0.505234,0.16840552,0.8502788,0.06388194,0.28940094,-0.5577946,1.2694305,-0.51122606,-1.1018133,-0.16699402,0.3070751,-0.28811756,0.10582949,-0.045120433,0.3611597,-0.0346874,-0.9128663,0.5578294,-0.32537636,0.49885535,0.3732202,0.02160353,0.05129282,0.5734722,0.31164017,0.25308597,-0.17212273,0.45137122,0.0034595532,0.3319174,0.95401055,0.19572566,0.29912153,-0.010098617,-0.04582339,-0.14290822,0.2850407,-0.40179387,0.20154315,-0.15043923,0.12677413,-0.3119023,-0.13067044,-0.64294195,0.1307846,0.24379857,-0.27202895,0.7621538,-0.001245793,-0.82116705,-0.07986305,-0.25435665,-0.80892575,0.2513437,-0.43069518,-0.4114817,-0.28901526,0.5739424,-0.47024867,0.6565303,-0.46580198,0.40099066,-0.45114344,0.40668678,-0.028575953,0.14908257,0.13590856,-0.3251287,0.45752427,0.14961076,0.4709121,-0.46990377,0.06509693,-0.25088817,0.3344926,0.41060922,0.6510128,-0.054181695,-0.51687247,0.30688205,-0.381715,0.23244023,-0.5866692,0.40038615,0.41452518,-0.073237635,0.10332696,-0.052586447,0.13828939,-0.64711237,-0.015039876,0.047585357,0.5254549,-0.07654947,0.5827638,0.7606482,-0.054991942,1.1794177,-0.18183586,0.7450291,0.17071576,0.33829665,-0.2824977,-0.4113178,-0.5715165,-0.15114206,-0.057362318,0.19878656,-0.81405693,-0.1968369,0.034598224,-0.3834963,0.34424174,0.4120563,-0.64362305,0.016189918,0.5684401,-0.2040435,0.69358295,-0.44701573,-0.26269805,0.05269092,-0.062220614,0.3129328,-0.34956875,-0.26316363,0.13665895,0.3959929,0.15773383,0.5832867,0.18864417,0.46243656,-0.37004226,-0.42686757,-0.05811221,0.17865801,-0.42298713,0.5705126,0.7706161,-0.3228109,-0.5572855,-0.02020231,0.2485757,0.27230334,-0.011322616,-1.0264324,-0.3266445,0.3659921,-0.13376218,-0.2804148,-0.6354891,0.12013995,-0.013960328,-0.03723621,-0.18969744,0.5581779,-0.3536725,-0.58351564,-0.064101115,0.09573285,0.047789585,-0.08768712,-0.34449267,0.08386555,0.03758539,-0.3569284,0.5626951,0.40393862,-0.51736265,-0.39804563,-0.7090501,-0.28429466,-0.17192751,0.04436979,-0.7126397,0.1512369,0.77611685,-0.012899658,-0.038024053,-0.3789909,-0.29041925,0.110037506,-0.2695588,-0.06751223,0.5546884,-0.17287944,0.8347669,-0.75293833,-0.75634295,0.45014375,-0.7101408,0.26126888,-0.12646355,-0.5360144,0.48283243,0.11440192,0.36298555,-0.13600889,0.8050757,-0.58293015,0.10295829,0.024561012,-0.49506876,0.59674436,-0.43230194,0.42759144,-0.015650637,-0.21000637,-1.0373434,-0.81937647,0.1906498,0.100576624,-0.65719956,0.16692086,-0.28115073,-0.57753617,-0.4127522,0.14216982,-0.062385432,-0.34925744,-0.15122984,0.45992216,0.31213287,-0.22591718,0.17372322,-0.6685174,0.4788446,-0.07703654,-0.17700447,-0.4936909,-0.3931258,0.36195856,0.0046429625,-0.05828379,0.076077595,0.6730361,-1.1271538,0.042789374,0.8453349,-0.9649189,-0.17010705,-0.38468707,-0.024506176,-0.23383498,0.33839864,-0.028921116,-0.43265408,0.108178474,0.057590287,-0.47557247,-0.47018045,0.037675984,-0.30090246,0.5252532,-0.27486143,-0.67661,0.08298683,0.021315863,-0.23861888,0.40907586,-0.3291329,-0.052910507,0.018059662,0.15026985,0.4668098,-0.48007128,-0.4200765,-0.40998375,0.07339673,0.13758925,-1.088934,0.23364419,-0.050045583,-0.40508097,-0.52832913,0.25880295,-0.035348035,-0.5244983,-0.022165576,-0.3935967,-0.20246096,0.03100978,0.23282371,-0.43496895,-0.13170016,0.07449974,-0.22976017,0.2936371,0.22556756,0.38647172,0.55183053,0.6673465,-0.023091525,0.070360586,0.36805493,-0.7068709,-0.051636092,0.17488441,0.5116318,-0.04009586,-0.7119107,0.57402134,0.4450204,-0.2360279,-0.1825404,0.18315643,0.22673,-0.386628,0.17943269,-0.2490224,0.83074933,0.3625247,0.22848178,0.2251066,-0.6462029,-0.31104928,-0.15997654,-0.40615803,-0.3568745,-0.2626462,-0.04791961,1.3903699,0.8125416,0.2792781,0.31545874,0.358213,-0.2258785,-0.16252917,0.21810621,0.10052074,0.46103907,-0.19274606,-0.77321696,-0.07866381,-0.61446357,0.77505344,-0.40795934,-0.05455713,1.035351,-0.30914932,0.37937307,-0.7616318,0.505712,0.19000167,0.35636708,0.18946409,-0.3180485,0.20939249,0.24734592,0.18717648,0.10974853,-0.41274926,0.62178046,-0.085045606,0.5472266,-0.18145001,0.19138336,-0.21568774,-0.22474381,-0.5022323,-0.22252414,0.29084805,0.26466027,-0.3845493,0.28670132,0.1643742,-0.71484584,-0.10916844,0.26488104,0.6313335,-0.049690038,-0.550192,-0.43997574,-0.031080905,-0.28995076,-0.100075684,-0.7469216,0.08568278,0.80220306,-0.1757514,-0.23127708,0.7020131,0.6394057,-1.0733744,0.037542786,-0.70440584,-0.28227624,0.16628435,-0.055827662,-0.50587255,0.32167622,0.14301646,0.47915423,-0.39426893,0.05789275,-0.10692642,0.097881205,-0.38433948,-0.22028804,-0.38927346,0.2726118,0.1747827,-0.039787073,0.26794285,0.6366563,-0.68215716,-0.41935822,0.57380253,-0.5407872,0.48545444,0.18687698,-0.13573804,-0.18086575,-0.15111092,0.23359144,0.14350832,0.07245648,-0.04900892,0.11583935,0.08601891,-0.5449971,0.047587942,0.41666934,-1.2964095,-0.6573607,0.29345307,-0.32636365,-0.17878683,-0.05786453,0.06044048,-0.016086515,0.060727343,-0.044463564,-0.6243923,-0.2795033,-0.16852275,-0.27090496,0.5462795,0.14394341,-0.12102343,0.8867729,0.33839566,0.2142194,0.31052697,-0.43410593,0.03790122,0.28929633,0.23195395,-0.48917156,-0.43169677,-0.5659455,-0.3093897,-0.014519363,0.14562811,-0.063537024,-0.18476897,0.05912851,0.25720677,-0.032353207,0.061359033,0.05174388,-0.10045889,0.14001392,-0.3540579,0.39141142,0.00822839,0.4517288,0.07393501,-0.7262942,-0.7922442,-0.005358793,-0.61840206,-0.33562577,0.57414544,-0.28244317,0.041971453,-0.20970212,-0.33002713,-0.41059846,-0.23082078,-0.32206893,0.034919545,0.2347106,0.050655283,-0.14713366,-0.24083242,0.27286625,-0.08783114,0.18502644,-0.45970717,-0.42210248,0.0568982,0.4312681,0.18773875,0.8061718,-0.18125482,0.14806297,-0.53424954,-0.09621832,-0.17551838,-0.4748941,0.2851845,-0.3628441,0.69735765,-0.2605179,0.016825728,0.4073971,-0.534509,-0.047693692,-1.083167,0.56220806,-0.55297124,0.1487576,-0.08250441,-0.13161129,0.11606127,-1.2549199,0.4208665,-0.3324067,0.2234729,0.6147486,-0.17990583,0.58556926,0.13887806,-0.095608555,-0.06950278,0.09175522,-0.17635404,-0.3427471,0.1360222,-0.18873799,-0.36678097,0.6897662,0.23966159,0.21682078,0.14896207,-0.6010395,1.0584934,0.053418618,0.17395693,-0.050638594,0.13724245,0.12862965,-0.067835554,0.48378232,-0.21534903,0.80232984,0.14516926,0.16004266,0.2989931,-0.013535102,0.22162464,0.63021636,0.0556866,-0.31266296,0.12936476,-0.27907476,0.46147627,-0.5774374,0.9255094,0.24101627,0.2025593,0.4631731,-0.16473986,0.5241691,0.051157773,0.08489501,-0.63075835,0.22748771,-0.3418513,-0.3077382,0.022423169,-0.36497045,0.27457345,0.5922643,0.5718268,0.41578773,-0.13958848,-0.6780976,-0.64002293,0.024370972,-0.19388284,0.27412933,0.2963904,1.2807788,-0.51295805,0.3841475,-0.2739106,0.10511641,0.33883253,0.5678178,-0.34252954,0.136213,0.029532075,0.0072645918,-0.076295406,-0.53717655,0.35147417,-0.74168164,0.108831994,0.28060016,0.28531745,-0.48875013,0.4017697,-0.1618458,0.6531634,0.4410565,-0.16839893,0.049689304,-0.3964555,-0.4863951,0.35195234,-0.42731476,-0.22750373,-0.073995456,-0.05079384,-0.10203626,-0.19239743,0.19955792,0.6005496,0.5394277,-0.12857802,-0.36334777,-0.7153834,0.4427163,0.04747686,0.23372607,-0.20262907,-0.4367186,0.10288838,0.22114715,-0.43765873,0.4048578,-0.21403793,-0.3927942,0.05472433,0.57448083,-0.5030016,0.068138786,-0.807137,0.020877086,0.7395058,0.3146242,0.22628015,-0.22381207,-0.023656894,-0.22709565,-0.6845368,-0.7273537,-0.2334802,-0.051468316,0.15840141,-0.014854712,0.09287056,0.31634128,-0.25652146,0.17668365,-0.2054041,-0.28400296,-0.12845482,-0.72973055,-1.1247741,-0.43961194,-0.6201712,0.20318097,0.29440427,-0.6449723,0.27305025]\n'
        sock.sendall(msg.encode('ascii'))
        print(cnt)
        cnt += 1


def send_protocol(event, data):
    with io.BytesIO() as memfile:
        pickle.dump([event, data], memfile)
        serialized = memfile.getvalue()
    return serialized + b'\n'


while True:
    try:
        t = Thread(target=run, daemon=True)
        t.start()

        while True:
            event = input('event : ')
            msg = input('send : ')

            sock.sendall(send_protocol(event, msg))
        # t2 = Thread(target=send_msg_loop, daemon=True)
        # t2.start()
        #
        # asyncio.create_task(interrupt())

    except Exception as e:
        time.sleep(1)
        print(e)